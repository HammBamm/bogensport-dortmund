{"ast":null,"code":"var _jsxFileName = \"/Users/kevin.massmann/Schulungen/bogensport-dortmund/client/src/components/contact-form/contact-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { FormTextarea } from \"../form-input/form-input.styles\";\nimport { ContactFormContainer } from \"./contact-form.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = () => {\n  _s();\n\n  const [status, setStatus] = useState(\"Senden\");\n  const [formVals, setFormVals] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const {\n    name,\n    email,\n    message\n  } = formVals;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setStatus(\"Sende Nachricht...\");\n    const {\n      name,\n      email,\n      message\n    } = event.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value\n    };\n    let response = await fetch(\"http://localhost:5000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(details)\n    });\n    setStatus(\"Senden\");\n    let result = await response.json();\n    alert(result.status); //emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setFormVals({ ...formVals,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactFormContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"contactFormId\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"name\",\n        type: \"text\",\n        value: name,\n        handleChange: handleChange,\n        label: \"Vor- und Nachname\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        value: email,\n        label: \"E-Mail\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormTextarea, {\n        name: \"message\",\n        handleChange: handleChange,\n        form: \"contactFormId\",\n        placeholder: \"Nachricht\",\n        required: true,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        inverted: true,\n        type: \"submit\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"BREBbJJ59kxKYr9N/vm4/qEMfI8=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/kevin.massmann/Schulungen/bogensport-dortmund/client/src/components/contact-form/contact-form.component.jsx"],"names":["React","useState","CustomButton","FormInput","FormTextarea","ContactFormContainer","ContactForm","status","setStatus","formVals","setFormVals","name","email","message","handleSubmit","event","preventDefault","target","elements","details","value","response","fetch","method","headers","body","JSON","stringify","result","json","alert","handleChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { FormTextarea } from \"../form-input/form-input.styles\";\nimport { ContactFormContainer } from \"./contact-form.styles\";\n\nconst ContactForm = () => {\n\n  const [status, setStatus] = useState(\"Senden\");\n  const [formVals, setFormVals] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n\n  const { name, email, message } = formVals;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    setStatus(\"Sende Nachricht...\");\n    const { name, email, message } = event.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value,\n    };\n\n    let response = await fetch(\"http://localhost:5000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(details),\n    });\n    setStatus(\"Senden\");\n    let result = await response.json();\n    alert(result.status);\n    //emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    setFormVals({ ...formVals, [name]: value });\n  };\n\n  return (\n    <ContactFormContainer>\n      <form id= 'contactFormId' onSubmit={handleSubmit}>\n        <FormInput\n          name='name'\n          type='text'\n          value={name}\n          handleChange={handleChange}\n          label='Vor- und Nachname'\n          required\n          />\n        <FormInput\n          name='email'\n          type='email'\n          handleChange={handleChange}\n          value={email}\n          label='E-Mail'\n          required\n        />\n        <FormTextarea\n          name='message'\n          handleChange={handleChange}\n          form='contactFormId'\n          placeholder='Nachricht'\n          required\n        >\n          {message}\n        </FormTextarea>\n        <CustomButton inverted type=\"submit\">{status}</CustomButton>\n      </form>\n    </ContactFormContainer>\n  );\n};\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}